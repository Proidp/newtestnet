{"ast":null,"code":"import _slicedToArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{connectorLocalStorageKey}from'@pancakeswap-libs/uikit';import{useWeb3React as useWeb3ReactCore}from'@web3-react/core';// eslint-disable-next-line import/no-unresolved\nimport{useEffect,useState}from'react';import{isMobile}from'react-device-detect';import{injected}from'../connectors';import{NetworkContextName}from'../constants';export function useActiveWeb3React(){var context=useWeb3ReactCore();var contextNetwork=useWeb3ReactCore(NetworkContextName);return context.active?context:contextNetwork;}export function useEagerConnect(){var _useWeb3ReactCore=useWeb3ReactCore(),activate=_useWeb3ReactCore.activate,active=_useWeb3ReactCore.active;// specifically using useWeb3ReactCore because of what this hook does\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),tried=_useState2[0],setTried=_useState2[1];useEffect(function(){injected.isAuthorized().then(function(isAuthorized){var hasSignedIn=window.localStorage.getItem(connectorLocalStorageKey);if(isAuthorized&&hasSignedIn){activate(injected,undefined,true).catch(function(){setTried(true);});}else if(isMobile&&window.ethereum&&hasSignedIn){activate(injected,undefined,true).catch(function(){setTried(true);});}else{setTried(true);}});},[activate]);// intentionally only running on mount (make sure it's only mounted once :))\n// if the connection worked, wait until we get confirmation of that to flip the flag\nuseEffect(function(){if(active){setTried(true);}},[active]);return tried;}/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network theyre on\r\n */export function useInactiveListener(){var suppress=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var _useWeb3ReactCore2=useWeb3ReactCore(),active=_useWeb3ReactCore2.active,error=_useWeb3ReactCore2.error,activate=_useWeb3ReactCore2.activate;// specifically using useWeb3React because of what this hook does\nuseEffect(function(){var _window=window,ethereum=_window.ethereum;if(ethereum&&ethereum.on&&!active&&!error&&!suppress){var handleChainChanged=function handleChainChanged(){// eat errors\nactivate(injected,undefined,true).catch(function(e){console.error('Failed to activate after chain changed',e);});};var handleAccountsChanged=function handleAccountsChanged(accounts){if(accounts.length>0){// eat errors\nactivate(injected,undefined,true).catch(function(e){console.error('Failed to activate after accounts changed',e);});}};ethereum.on('chainChanged',handleChainChanged);ethereum.on('accountsChanged',handleAccountsChanged);return function(){if(ethereum.removeListener){ethereum.removeListener('chainChanged',handleChainChanged);ethereum.removeListener('accountsChanged',handleAccountsChanged);}};}return undefined;},[active,error,suppress,activate]);}","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/hooks/index.ts"],"names":["connectorLocalStorageKey","useWeb3React","useWeb3ReactCore","useEffect","useState","isMobile","injected","NetworkContextName","useActiveWeb3React","context","contextNetwork","active","useEagerConnect","activate","tried","setTried","isAuthorized","then","hasSignedIn","window","localStorage","getItem","undefined","catch","ethereum","useInactiveListener","suppress","error","on","handleChainChanged","e","console","handleAccountsChanged","accounts","length","removeListener"],"mappings":"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","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { connectorLocalStorageKey } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\nimport { useEffect, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { injected } from '../connectors'\r\nimport { NetworkContextName } from '../constants'\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\r\n  const context = useWeb3ReactCore<Web3Provider>()\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\r\n  return context.active ? context : contextNetwork\r\n}\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey)\r\n      if (isAuthorized && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else if (isMobile && window.ethereum && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (active) {\r\n      setTried(true)\r\n    }\r\n  }, [active])\r\n\r\n  return tried\r\n}\r\n\r\n/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network theyre on\r\n */\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window\r\n\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch((e) => {\r\n          console.error('Failed to activate after chain changed', e)\r\n        })\r\n      }\r\n\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        if (accounts.length > 0) {\r\n          // eat errors\r\n          activate(injected, undefined, true).catch((e) => {\r\n            console.error('Failed to activate after accounts changed', e)\r\n          })\r\n        }\r\n      }\r\n\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }, [active, error, suppress, activate])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}