{"ast":null,"code":"import{useMemo}from'react';import{kebabCase}from'lodash';import{toastTypes}from'@pancakeswap-libs/uikit';import{useDispatch}from'react-redux';import{push as pushToast,remove as removeToast,clear as clearToast}from'state/actions';// Toasts\nvar useToast=function useToast(){var dispatch=useDispatch();var helpers=useMemo(function(){var push=function push(toast){return dispatch(pushToast(toast));};return{toastError:function toastError(title,description){return push({id:kebabCase(title),type:toastTypes.DANGER,title:title,description:description});},toastInfo:function toastInfo(title,description){return push({id:kebabCase(title),type:toastTypes.INFO,title:title,description:description});},toastSuccess:function toastSuccess(title,description){return push({id:kebabCase(title),type:toastTypes.SUCCESS,title:title,description:description});},toastWarning:function toastWarning(title,description){return push({id:kebabCase(title),type:toastTypes.WARNING,title:title,description:description});},push:push,remove:function remove(id){return dispatch(removeToast(id));},clear:function clear(){return dispatch(clearToast());}};},[dispatch]);return helpers;};export default useToast;","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/hooks/useToast.ts"],"names":["useMemo","kebabCase","toastTypes","useDispatch","push","pushToast","remove","removeToast","clear","clearToast","useToast","dispatch","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAAgBC,UAAhB,KAAkC,yBAAlC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OACEC,IAAI,GAAIC,CAAAA,SADV,CAEEC,MAAM,GAAIC,CAAAA,WAFZ,CAGEC,KAAK,GAAIC,CAAAA,UAHX,KAIO,eAJP,CAMA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,GAAMS,CAAAA,OAAO,CAAGZ,OAAO,CAAC,UAAM,CAC5B,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACS,KAAD,QAAkBF,CAAAA,QAAQ,CAACN,SAAS,CAACQ,KAAD,CAAV,CAA1B,EAAb,CAEA,MAAO,CACLC,UAAU,CAAE,oBAACC,KAAD,CAAgBC,WAAhB,CAAyC,CACnD,MAAOZ,CAAAA,IAAI,CAAC,CAAEa,EAAE,CAAEhB,SAAS,CAACc,KAAD,CAAf,CAAwBG,IAAI,CAAEhB,UAAU,CAACiB,MAAzC,CAAiDJ,KAAK,CAALA,KAAjD,CAAwDC,WAAW,CAAXA,WAAxD,CAAD,CAAX,CACD,CAHI,CAILI,SAAS,CAAE,mBAACL,KAAD,CAAgBC,WAAhB,CAAyC,CAClD,MAAOZ,CAAAA,IAAI,CAAC,CAAEa,EAAE,CAAEhB,SAAS,CAACc,KAAD,CAAf,CAAwBG,IAAI,CAAEhB,UAAU,CAACmB,IAAzC,CAA+CN,KAAK,CAALA,KAA/C,CAAsDC,WAAW,CAAXA,WAAtD,CAAD,CAAX,CACD,CANI,CAOLM,YAAY,CAAE,sBAACP,KAAD,CAAgBC,WAAhB,CAAyC,CACrD,MAAOZ,CAAAA,IAAI,CAAC,CAAEa,EAAE,CAAEhB,SAAS,CAACc,KAAD,CAAf,CAAwBG,IAAI,CAAEhB,UAAU,CAACqB,OAAzC,CAAkDR,KAAK,CAALA,KAAlD,CAAyDC,WAAW,CAAXA,WAAzD,CAAD,CAAX,CACD,CATI,CAULQ,YAAY,CAAE,sBAACT,KAAD,CAAgBC,WAAhB,CAAyC,CACrD,MAAOZ,CAAAA,IAAI,CAAC,CAAEa,EAAE,CAAEhB,SAAS,CAACc,KAAD,CAAf,CAAwBG,IAAI,CAAEhB,UAAU,CAACuB,OAAzC,CAAkDV,KAAK,CAALA,KAAlD,CAAyDC,WAAW,CAAXA,WAAzD,CAAD,CAAX,CACD,CAZI,CAaLZ,IAAI,CAAJA,IAbK,CAcLE,MAAM,CAAE,gBAACW,EAAD,QAAgBN,CAAAA,QAAQ,CAACJ,WAAW,CAACU,EAAD,CAAZ,CAAxB,EAdH,CAeLT,KAAK,CAAE,uBAAMG,CAAAA,QAAQ,CAACF,UAAU,EAAX,CAAd,EAfF,CAAP,CAiBD,CApBsB,CAoBpB,CAACE,QAAD,CApBoB,CAAvB,CAsBA,MAAOC,CAAAA,OAAP,CACD,CAzBD,CA2BA,cAAeF,CAAAA,QAAf","sourcesContent":["import { useMemo } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast\r\n} from 'state/actions'\r\n\r\n// Toasts\r\nconst useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\nexport default useToast"]},"metadata":{},"sourceType":"module"}