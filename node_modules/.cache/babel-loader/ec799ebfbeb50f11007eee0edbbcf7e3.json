{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar client_1 = tslib_1.__importDefault(require(\"@walletconnect/client\"));\n\nvar qrcode_modal_1 = tslib_1.__importDefault(require(\"@walletconnect/qrcode-modal\"));\n\nvar http_connection_1 = tslib_1.__importDefault(require(\"@walletconnect/http-connection\"));\n\nvar utils_1 = require(\"@walletconnect/utils\");\n\nvar ProviderEngine = require(\"web3-provider-engine\");\n\nvar CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\n\nvar FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\n\nvar FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\n\nvar HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\n\nvar NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\n\nvar SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\n\nvar WalletConnectProvider = /*#__PURE__*/function (_ProviderEngine) {\n  _inherits(WalletConnectProvider, _ProviderEngine);\n\n  var _super = _createSuper(WalletConnectProvider);\n\n  function WalletConnectProvider(opts) {\n    var _this;\n\n    _classCallCheck(this, WalletConnectProvider);\n\n    _this = _super.call(this, {\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    _this.bridge = \"https://bridge.walletconnect.org\";\n    _this.qrcode = true;\n    _this.qrcodeModalOptions = undefined;\n    _this.rpc = null;\n    _this.infuraId = \"\";\n    _this.http = null;\n    _this.isConnecting = false;\n    _this.connected = false;\n    _this.connectCallbacks = [];\n    _this.accounts = [];\n    _this.chainId = 1;\n    _this.networkId = 1;\n    _this.rpcUrl = \"\";\n    _this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    _this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    _this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    _this.wc = opts.connector || new client_1.default({\n      bridge: _this.bridge,\n      qrcodeModal: _this.qrcode ? qrcode_modal_1.default : undefined,\n      qrcodeModalOptions: _this.qrcodeModalOptions\n    });\n    _this.rpc = opts.rpc || null;\n\n    if (!_this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n\n    _this.infuraId = opts.infuraId || \"\";\n    _this.chainId = typeof opts.chainId !== \"undefined\" ? opts.chainId : 1;\n    _this.networkId = _this.chainId;\n\n    _this.updateRpcUrl(_this.chainId);\n\n    _this.addProvider(new FixtureSubprovider({\n      eth_hashrate: \"0x00\",\n      eth_mining: false,\n      eth_syncing: true,\n      net_listening: true,\n      web3_clientVersion: \"WalletConnect/v1.x.x/javascript\"\n    }));\n\n    _this.addProvider(new CacheSubprovider());\n\n    _this.addProvider(new SubscriptionsSubprovider());\n\n    _this.addProvider(new FilterSubprovider());\n\n    _this.addProvider(new NonceSubprovider());\n\n    _this.addProvider(new HookedWalletSubprovider({\n      getAccounts: function getAccounts(cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var wc, accounts;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context.sent;\n                  accounts = wc.accounts;\n\n                  if (accounts && accounts.length) {\n                    cb(null, accounts);\n                  } else {\n                    cb(new Error(\"Failed to get accounts\"));\n                  }\n\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  cb(_context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 8]]);\n        }));\n      },\n      processMessage: function processMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context2.sent;\n                  _context2.next = 6;\n                  return wc.signMessage([msgParams.from, msgParams.data]);\n\n                case 6:\n                  result = _context2.sent;\n                  cb(null, result);\n                  _context2.next = 13;\n                  break;\n\n                case 10:\n                  _context2.prev = 10;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  cb(_context2.t0);\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[0, 10]]);\n        }));\n      },\n      processPersonalMessage: function processPersonalMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context3.sent;\n                  _context3.next = 6;\n                  return wc.signPersonalMessage([msgParams.data, msgParams.from]);\n\n                case 6:\n                  result = _context3.sent;\n                  cb(null, result);\n                  _context3.next = 13;\n                  break;\n\n                case 10:\n                  _context3.prev = 10;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  cb(_context3.t0);\n\n                case 13:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this, [[0, 10]]);\n        }));\n      },\n      processSignTransaction: function processSignTransaction(txParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.prev = 0;\n                  _context4.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context4.sent;\n                  _context4.next = 6;\n                  return wc.signTransaction(txParams);\n\n                case 6:\n                  result = _context4.sent;\n                  cb(null, result);\n                  _context4.next = 13;\n                  break;\n\n                case 10:\n                  _context4.prev = 10;\n                  _context4.t0 = _context4[\"catch\"](0);\n                  cb(_context4.t0);\n\n                case 13:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this, [[0, 10]]);\n        }));\n      },\n      processTransaction: function processTransaction(txParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.prev = 0;\n                  _context5.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context5.sent;\n                  _context5.next = 6;\n                  return wc.sendTransaction(txParams);\n\n                case 6:\n                  result = _context5.sent;\n                  cb(null, result);\n                  _context5.next = 13;\n                  break;\n\n                case 10:\n                  _context5.prev = 10;\n                  _context5.t0 = _context5[\"catch\"](0);\n                  cb(_context5.t0);\n\n                case 13:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this, [[0, 10]]);\n        }));\n      },\n      processTypedMessage: function processTypedMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.prev = 0;\n                  _context6.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context6.sent;\n                  _context6.next = 6;\n                  return wc.signTypedData([msgParams.from, msgParams.data]);\n\n                case 6:\n                  result = _context6.sent;\n                  cb(null, result);\n                  _context6.next = 13;\n                  break;\n\n                case 10:\n                  _context6.prev = 10;\n                  _context6.t0 = _context6[\"catch\"](0);\n                  cb(_context6.t0);\n\n                case 13:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this, [[0, 10]]);\n        }));\n      }\n    }));\n\n    _this.addProvider({\n      handleRequest: function handleRequest(payload, next, end) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n          var _yield$this$handleReq, result;\n\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.prev = 0;\n                  _context7.next = 3;\n                  return this.handleRequest(payload);\n\n                case 3:\n                  _yield$this$handleReq = _context7.sent;\n                  result = _yield$this$handleReq.result;\n                  end(null, result);\n                  _context7.next = 11;\n                  break;\n\n                case 8:\n                  _context7.prev = 8;\n                  _context7.t0 = _context7[\"catch\"](0);\n                  end(_context7.t0);\n\n                case 11:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this, [[0, 8]]);\n        }));\n      },\n      setEngine: function setEngine(_) {\n        return _;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"enable\",\n    value: function enable() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        return tslib_1.__awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n          var wc;\n          return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.prev = 0;\n                  _context8.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context8.sent;\n\n                  if (!wc) {\n                    _context8.next = 10;\n                    break;\n                  }\n\n                  this.start();\n                  this.subscribeWalletConnector();\n                  resolve(wc.accounts);\n                  _context8.next = 11;\n                  break;\n\n                case 10:\n                  return _context8.abrupt(\"return\", reject(new Error(\"Failed to connect to WalleConnect\")));\n\n                case 11:\n                  _context8.next = 16;\n                  break;\n\n                case 13:\n                  _context8.prev = 13;\n                  _context8.t0 = _context8[\"catch\"](0);\n                  return _context8.abrupt(\"return\", reject(_context8.t0));\n\n                case 16:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this, [[0, 13]]);\n        }));\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this.send(payload));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"send\",\n    value: function send(payload, callback) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!(typeof payload === \"string\")) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                method = payload;\n                params = callback;\n                return _context10.abrupt(\"return\", this.sendAsyncPromise(method, params));\n\n              case 4:\n                payload = Object.assign({\n                  id: utils_1.payloadId(),\n                  jsonrpc: \"2.0\"\n                }, payload);\n\n                if (!callback) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                this.sendAsync(payload, callback);\n                return _context10.abrupt(\"return\");\n\n              case 8:\n                return _context10.abrupt(\"return\", this.sendAsyncPromise(payload.method, payload.params));\n\n              case 9:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"onConnect\",\n    value: function onConnect(callback) {\n      this.connectCallbacks.push(callback);\n    }\n  }, {\n    key: \"triggerConnect\",\n    value: function triggerConnect(result) {\n      if (this.connectCallbacks && this.connectCallbacks.length) {\n        this.connectCallbacks.forEach(function (callback) {\n          return callback(result);\n        });\n      }\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this.close();\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getWalletConnector({\n                  disableSessionCreation: true\n                });\n\n              case 2:\n                wc = _context12.sent;\n                _context12.next = 5;\n                return wc.killSession();\n\n              case 5:\n                _context12.next = 7;\n                return this.onDisconnect();\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"handleRequest\",\n    value: function handleRequest(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var response, result, wc;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                result = null;\n                _context13.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context13.sent;\n                _context13.t0 = payload.method;\n                _context13.next = _context13.t0 === \"wc_killSession\" ? 8 : _context13.t0 === \"eth_accounts\" ? 12 : _context13.t0 === \"eth_coinbase\" ? 14 : _context13.t0 === \"eth_chainId\" ? 16 : _context13.t0 === \"net_version\" ? 18 : _context13.t0 === \"eth_uninstallFilter\" ? 20 : 23;\n                break;\n\n              case 8:\n                _context13.next = 10;\n                return this.close();\n\n              case 10:\n                result = null;\n                return _context13.abrupt(\"break\", 26);\n\n              case 12:\n                result = wc.accounts;\n                return _context13.abrupt(\"break\", 26);\n\n              case 14:\n                result = wc.accounts[0];\n                return _context13.abrupt(\"break\", 26);\n\n              case 16:\n                result = wc.chainId;\n                return _context13.abrupt(\"break\", 26);\n\n              case 18:\n                result = wc.networkId || wc.chainId;\n                return _context13.abrupt(\"break\", 26);\n\n              case 20:\n                this.sendAsync(payload, function (_) {\n                  return _;\n                });\n                result = true;\n                return _context13.abrupt(\"break\", 26);\n\n              case 23:\n                _context13.next = 25;\n                return this.handleOtherRequests(payload);\n\n              case 25:\n                response = _context13.sent;\n\n              case 26:\n                if (!response) {\n                  _context13.next = 28;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", response);\n\n              case 28:\n                return _context13.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 31:\n                _context13.prev = 31;\n                _context13.t1 = _context13[\"catch\"](0);\n                this.emit(\"error\", _context13.t1);\n                throw _context13.t1;\n\n              case 35:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[0, 31]]);\n      }));\n    }\n  }, {\n    key: \"handleOtherRequests\",\n    value: function handleOtherRequests(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var wc, result;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (!(!utils_1.signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\"))) {\n                  _context14.next = 2;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", this.handleReadRequests(payload));\n\n              case 2:\n                _context14.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context14.sent;\n                _context14.next = 7;\n                return wc.sendCustomRequest(payload);\n\n              case 7:\n                result = _context14.sent;\n                return _context14.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"handleReadRequests\",\n    value: function handleReadRequests(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var error;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (this.http) {\n                  _context15.next = 4;\n                  break;\n                }\n\n                error = new Error(\"HTTP Connection not available\");\n                this.emit(\"error\", error);\n                throw error;\n\n              case 4:\n                return _context15.abrupt(\"return\", this.http.send(payload));\n\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n  }, {\n    key: \"formatResponse\",\n    value: function formatResponse(payload, result) {\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n  }, {\n    key: \"getWalletConnector\",\n    value: function getWalletConnector() {\n      var _this3 = this;\n\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$disableSessionC = opts.disableSessionCreation,\n          disableSessionCreation = _opts$disableSessionC === void 0 ? false : _opts$disableSessionC;\n      return new Promise(function (resolve, reject) {\n        var wc = _this3.wc;\n\n        if (_this3.isConnecting) {\n          _this3.onConnect(function (x) {\n            return resolve(x);\n          });\n        } else if (!wc.connected && !disableSessionCreation) {\n          _this3.isConnecting = true;\n          var sessionRequestOpions = _this3.chainId ? {\n            chainId: _this3.chainId\n          } : undefined;\n          wc.on(\"modal_closed\", function () {\n            reject(new Error(\"User closed modal\"));\n          });\n          wc.createSession(sessionRequestOpions).then(function () {\n            wc.on(\"connect\", function (error, payload) {\n              if (error) {\n                _this3.isConnecting = false;\n                return reject(error);\n              }\n\n              _this3.isConnecting = false;\n              _this3.connected = true;\n\n              if (payload) {\n                _this3.updateState(payload.params[0]);\n              }\n\n              _this3.emit(\"connect\");\n\n              _this3.triggerConnect(wc);\n\n              resolve(wc);\n            });\n          }).catch(function (error) {\n            _this3.isConnecting = false;\n            reject(error);\n          });\n        } else {\n          if (!_this3.connected) {\n            _this3.connected = true;\n\n            _this3.updateState(wc.session);\n          }\n\n          resolve(wc);\n        }\n      });\n    }\n  }, {\n    key: \"subscribeWalletConnector\",\n    value: function subscribeWalletConnector() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var _this4 = this;\n\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.getWalletConnector();\n\n              case 2:\n                wc = _context16.sent;\n                wc.on(\"disconnect\", function (error) {\n                  if (error) {\n                    _this4.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this4.onDisconnect();\n                });\n                wc.on(\"session_update\", function (error, payload) {\n                  if (error) {\n                    _this4.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this4.updateState(payload.params[0]);\n                });\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.stop();\n\n              case 2:\n                this.emit(\"close\", 1000, \"Connection closed\");\n                this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(sessionParams) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var accounts, chainId, networkId, rpcUrl;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                accounts = sessionParams.accounts, chainId = sessionParams.chainId, networkId = sessionParams.networkId, rpcUrl = sessionParams.rpcUrl;\n\n                if (!this.accounts || accounts && this.accounts !== accounts) {\n                  this.accounts = accounts;\n                  this.emit(\"accountsChanged\", accounts);\n                }\n\n                if (!this.chainId || chainId && this.chainId !== chainId) {\n                  this.chainId = chainId;\n                  this.emit(\"chainChanged\", chainId);\n                }\n\n                if (!this.networkId || networkId && this.networkId !== networkId) {\n                  this.networkId = networkId;\n                  this.emit(\"networkChanged\", networkId);\n                }\n\n                this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n\n              case 5:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"updateRpcUrl\",\n    value: function updateRpcUrl(chainId) {\n      var rpcUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var infuraNetworks = {\n        1: \"mainnet\",\n        3: \"ropsten\",\n        4: \"rinkeby\",\n        5: \"goerli\",\n        42: \"kovan\"\n      };\n      var network = infuraNetworks[chainId];\n\n      if (!rpcUrl) {\n        if (this.rpc && this.rpc[chainId]) {\n          rpcUrl = this.rpc[chainId];\n        } else if (network) {\n          rpcUrl = \"https://\".concat(network, \".infura.io/v3/\").concat(this.infuraId);\n        }\n      }\n\n      if (rpcUrl) {\n        this.rpcUrl = rpcUrl;\n        this.updateHttpConnection();\n      } else {\n        this.emit(\"error\", new Error(\"No RPC Url available for chainId: \".concat(chainId)));\n      }\n    }\n  }, {\n    key: \"updateHttpConnection\",\n    value: function updateHttpConnection() {\n      var _this5 = this;\n\n      if (this.rpcUrl) {\n        this.http = new http_connection_1.default(this.rpcUrl);\n        this.http.on(\"payload\", function (payload) {\n          return _this5.emit(\"payload\", payload);\n        });\n        this.http.on(\"error\", function (error) {\n          return _this5.emit(\"error\", error);\n        });\n      }\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(method, params) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.sendAsync({\n          id: utils_1.payloadId(),\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || []\n        }, function (error, response) {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(response.result);\n        });\n      });\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.wc;\n    }\n  }, {\n    key: \"walletMeta\",\n    get: function get() {\n      return this.wc.peerMeta;\n    }\n  }]);\n\n  return WalletConnectProvider;\n}(ProviderEngine);\n\nexports.default = WalletConnectProvider;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst client_1 = tslib_1.__importDefault(require(\"@walletconnect/client\"));\r\nconst qrcode_modal_1 = tslib_1.__importDefault(require(\"@walletconnect/qrcode-modal\"));\r\nconst http_connection_1 = tslib_1.__importDefault(require(\"@walletconnect/http-connection\"));\r\nconst utils_1 = require(\"@walletconnect/utils\");\r\nconst ProviderEngine = require(\"web3-provider-engine\");\r\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\r\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\r\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\r\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\r\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\r\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\r\nclass WalletConnectProvider extends ProviderEngine {\r\n    constructor(opts) {\r\n        super({ pollingInterval: opts.pollingInterval || 8000 });\r\n        this.bridge = \"https://bridge.walletconnect.org\";\r\n        this.qrcode = true;\r\n        this.qrcodeModalOptions = undefined;\r\n        this.rpc = null;\r\n        this.infuraId = \"\";\r\n        this.http = null;\r\n        this.isConnecting = false;\r\n        this.connected = false;\r\n        this.connectCallbacks = [];\r\n        this.accounts = [];\r\n        this.chainId = 1;\r\n        this.networkId = 1;\r\n        this.rpcUrl = \"\";\r\n        this.bridge = opts.connector\r\n            ? opts.connector.bridge\r\n            : opts.bridge || \"https://bridge.walletconnect.org\";\r\n        this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\r\n        this.qrcodeModalOptions = opts.qrcodeModalOptions;\r\n        this.wc =\r\n            opts.connector ||\r\n                new client_1.default({\r\n                    bridge: this.bridge,\r\n                    qrcodeModal: this.qrcode ? qrcode_modal_1.default : undefined,\r\n                    qrcodeModalOptions: this.qrcodeModalOptions,\r\n                });\r\n        this.rpc = opts.rpc || null;\r\n        if (!this.rpc &&\r\n            (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\r\n            throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\r\n        }\r\n        this.infuraId = opts.infuraId || \"\";\r\n        this.chainId = typeof opts.chainId !== \"undefined\" ? opts.chainId : 1;\r\n        this.networkId = this.chainId;\r\n        this.updateRpcUrl(this.chainId);\r\n        this.addProvider(new FixtureSubprovider({\r\n            eth_hashrate: \"0x00\",\r\n            eth_mining: false,\r\n            eth_syncing: true,\r\n            net_listening: true,\r\n            web3_clientVersion: `WalletConnect/v1.x.x/javascript`,\r\n        }));\r\n        this.addProvider(new CacheSubprovider());\r\n        this.addProvider(new SubscriptionsSubprovider());\r\n        this.addProvider(new FilterSubprovider());\r\n        this.addProvider(new NonceSubprovider());\r\n        this.addProvider(new HookedWalletSubprovider({\r\n            getAccounts: (cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const accounts = wc.accounts;\r\n                    if (accounts && accounts.length) {\r\n                        cb(null, accounts);\r\n                    }\r\n                    else {\r\n                        cb(new Error(\"Failed to get accounts\"));\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n            processMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const result = yield wc.signMessage([msgParams.from, msgParams.data]);\r\n                    cb(null, result);\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n            processPersonalMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const result = yield wc.signPersonalMessage([msgParams.data, msgParams.from]);\r\n                    cb(null, result);\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n            processSignTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const result = yield wc.signTransaction(txParams);\r\n                    cb(null, result);\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n            processTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const result = yield wc.sendTransaction(txParams);\r\n                    cb(null, result);\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n            processTypedMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const wc = yield this.getWalletConnector();\r\n                    const result = yield wc.signTypedData([msgParams.from, msgParams.data]);\r\n                    cb(null, result);\r\n                }\r\n                catch (error) {\r\n                    cb(error);\r\n                }\r\n            }),\r\n        }));\r\n        this.addProvider({\r\n            handleRequest: (payload, next, end) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const { result } = yield this.handleRequest(payload);\r\n                    end(null, result);\r\n                }\r\n                catch (error) {\r\n                    end(error);\r\n                }\r\n            }),\r\n            setEngine: (_) => _,\r\n        });\r\n    }\r\n    get isWalletConnect() {\r\n        return true;\r\n    }\r\n    get connector() {\r\n        return this.wc;\r\n    }\r\n    get walletMeta() {\r\n        return this.wc.peerMeta;\r\n    }\r\n    enable() {\r\n        return new Promise((resolve, reject) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const wc = yield this.getWalletConnector();\r\n                if (wc) {\r\n                    this.start();\r\n                    this.subscribeWalletConnector();\r\n                    resolve(wc.accounts);\r\n                }\r\n                else {\r\n                    return reject(new Error(\"Failed to connect to WalleConnect\"));\r\n                }\r\n            }\r\n            catch (error) {\r\n                return reject(error);\r\n            }\r\n        }));\r\n    }\r\n    request(payload) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            return this.send(payload);\r\n        });\r\n    }\r\n    send(payload, callback) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            if (typeof payload === \"string\") {\r\n                const method = payload;\r\n                const params = callback;\r\n                return this.sendAsyncPromise(method, params);\r\n            }\r\n            payload = Object.assign({ id: utils_1.payloadId(), jsonrpc: \"2.0\" }, payload);\r\n            if (callback) {\r\n                this.sendAsync(payload, callback);\r\n                return;\r\n            }\r\n            return this.sendAsyncPromise(payload.method, payload.params);\r\n        });\r\n    }\r\n    onConnect(callback) {\r\n        this.connectCallbacks.push(callback);\r\n    }\r\n    triggerConnect(result) {\r\n        if (this.connectCallbacks && this.connectCallbacks.length) {\r\n            this.connectCallbacks.forEach(callback => callback(result));\r\n        }\r\n    }\r\n    disconnect() {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            this.close();\r\n        });\r\n    }\r\n    close() {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            const wc = yield this.getWalletConnector({ disableSessionCreation: true });\r\n            yield wc.killSession();\r\n            yield this.onDisconnect();\r\n        });\r\n    }\r\n    handleRequest(payload) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let response;\r\n                let result = null;\r\n                const wc = yield this.getWalletConnector();\r\n                switch (payload.method) {\r\n                    case \"wc_killSession\":\r\n                        yield this.close();\r\n                        result = null;\r\n                        break;\r\n                    case \"eth_accounts\":\r\n                        result = wc.accounts;\r\n                        break;\r\n                    case \"eth_coinbase\":\r\n                        result = wc.accounts[0];\r\n                        break;\r\n                    case \"eth_chainId\":\r\n                        result = wc.chainId;\r\n                        break;\r\n                    case \"net_version\":\r\n                        result = wc.networkId || wc.chainId;\r\n                        break;\r\n                    case \"eth_uninstallFilter\":\r\n                        this.sendAsync(payload, (_) => _);\r\n                        result = true;\r\n                        break;\r\n                    default:\r\n                        response = yield this.handleOtherRequests(payload);\r\n                }\r\n                if (response) {\r\n                    return response;\r\n                }\r\n                return this.formatResponse(payload, result);\r\n            }\r\n            catch (error) {\r\n                this.emit(\"error\", error);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    handleOtherRequests(payload) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            if (!utils_1.signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\r\n                return this.handleReadRequests(payload);\r\n            }\r\n            const wc = yield this.getWalletConnector();\r\n            const result = yield wc.sendCustomRequest(payload);\r\n            return this.formatResponse(payload, result);\r\n        });\r\n    }\r\n    handleReadRequests(payload) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            if (!this.http) {\r\n                const error = new Error(\"HTTP Connection not available\");\r\n                this.emit(\"error\", error);\r\n                throw error;\r\n            }\r\n            return this.http.send(payload);\r\n        });\r\n    }\r\n    formatResponse(payload, result) {\r\n        return {\r\n            id: payload.id,\r\n            jsonrpc: payload.jsonrpc,\r\n            result: result,\r\n        };\r\n    }\r\n    getWalletConnector(opts = {}) {\r\n        const { disableSessionCreation = false } = opts;\r\n        return new Promise((resolve, reject) => {\r\n            const wc = this.wc;\r\n            if (this.isConnecting) {\r\n                this.onConnect((x) => resolve(x));\r\n            }\r\n            else if (!wc.connected && !disableSessionCreation) {\r\n                this.isConnecting = true;\r\n                const sessionRequestOpions = this.chainId ? { chainId: this.chainId } : undefined;\r\n                wc.on(\"modal_closed\", () => {\r\n                    reject(new Error(\"User closed modal\"));\r\n                });\r\n                wc.createSession(sessionRequestOpions)\r\n                    .then(() => {\r\n                    wc.on(\"connect\", (error, payload) => {\r\n                        if (error) {\r\n                            this.isConnecting = false;\r\n                            return reject(error);\r\n                        }\r\n                        this.isConnecting = false;\r\n                        this.connected = true;\r\n                        if (payload) {\r\n                            this.updateState(payload.params[0]);\r\n                        }\r\n                        this.emit(\"connect\");\r\n                        this.triggerConnect(wc);\r\n                        resolve(wc);\r\n                    });\r\n                })\r\n                    .catch(error => {\r\n                    this.isConnecting = false;\r\n                    reject(error);\r\n                });\r\n            }\r\n            else {\r\n                if (!this.connected) {\r\n                    this.connected = true;\r\n                    this.updateState(wc.session);\r\n                }\r\n                resolve(wc);\r\n            }\r\n        });\r\n    }\r\n    subscribeWalletConnector() {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            const wc = yield this.getWalletConnector();\r\n            wc.on(\"disconnect\", error => {\r\n                if (error) {\r\n                    this.emit(\"error\", error);\r\n                    return;\r\n                }\r\n                this.onDisconnect();\r\n            });\r\n            wc.on(\"session_update\", (error, payload) => {\r\n                if (error) {\r\n                    this.emit(\"error\", error);\r\n                    return;\r\n                }\r\n                this.updateState(payload.params[0]);\r\n            });\r\n        });\r\n    }\r\n    onDisconnect() {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            yield this.stop();\r\n            this.emit(\"close\", 1000, \"Connection closed\");\r\n            this.emit(\"disconnect\", 1000, \"Connection disconnected\");\r\n        });\r\n    }\r\n    updateState(sessionParams) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            const { accounts, chainId, networkId, rpcUrl } = sessionParams;\r\n            if (!this.accounts || (accounts && this.accounts !== accounts)) {\r\n                this.accounts = accounts;\r\n                this.emit(\"accountsChanged\", accounts);\r\n            }\r\n            if (!this.chainId || (chainId && this.chainId !== chainId)) {\r\n                this.chainId = chainId;\r\n                this.emit(\"chainChanged\", chainId);\r\n            }\r\n            if (!this.networkId || (networkId && this.networkId !== networkId)) {\r\n                this.networkId = networkId;\r\n                this.emit(\"networkChanged\", networkId);\r\n            }\r\n            this.updateRpcUrl(this.chainId, rpcUrl || \"\");\r\n        });\r\n    }\r\n    updateRpcUrl(chainId, rpcUrl = \"\") {\r\n        const infuraNetworks = {\r\n            1: \"mainnet\",\r\n            3: \"ropsten\",\r\n            4: \"rinkeby\",\r\n            5: \"goerli\",\r\n            42: \"kovan\",\r\n        };\r\n        const network = infuraNetworks[chainId];\r\n        if (!rpcUrl) {\r\n            if (this.rpc && this.rpc[chainId]) {\r\n                rpcUrl = this.rpc[chainId];\r\n            }\r\n            else if (network) {\r\n                rpcUrl = `https://${network}.infura.io/v3/${this.infuraId}`;\r\n            }\r\n        }\r\n        if (rpcUrl) {\r\n            this.rpcUrl = rpcUrl;\r\n            this.updateHttpConnection();\r\n        }\r\n        else {\r\n            this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\r\n        }\r\n    }\r\n    updateHttpConnection() {\r\n        if (this.rpcUrl) {\r\n            this.http = new http_connection_1.default(this.rpcUrl);\r\n            this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\r\n            this.http.on(\"error\", error => this.emit(\"error\", error));\r\n        }\r\n    }\r\n    sendAsyncPromise(method, params) {\r\n        return new Promise((resolve, reject) => {\r\n            this.sendAsync({\r\n                id: utils_1.payloadId(),\r\n                jsonrpc: \"2.0\",\r\n                method,\r\n                params: params || [],\r\n            }, (error, response) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                resolve(response.result);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.default = WalletConnectProvider;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}