{"ast":null,"code":"import _objectSpread from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import Cookies from'js-cookie';import{useActiveWeb3React}from'hooks';var initialState={profileLink:'https://pancakeswap.finance/profile',noProfileLink:'https://pancakeswap.finance/profile'};/**\r\n * Note - this will only work if the app is on the same domain\r\n */var useGetLocalProfile=function useGetLocalProfile(){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),profile=_useState2[0],setProfile=_useState2[1];var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;useEffect(function(){if(account){try{var localData=Cookies.get(\"profile_\".concat(account));if(localData){var localProfile=JSON.parse(localData);setProfile(function(prevProfile){return _objectSpread(_objectSpread({},prevProfile),{},{username:localProfile.username,image:localProfile.avatar});});}}catch(error){setProfile(initialState);}}else{setProfile(initialState);}},[account,setProfile]);return profile;};export default useGetLocalProfile;","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/hooks/useGetLocalProfile.ts"],"names":["useEffect","useState","Cookies","useActiveWeb3React","initialState","profileLink","noProfileLink","useGetLocalProfile","profile","setProfile","account","localData","get","localProfile","JSON","parse","prevProfile","username","image","avatar","error"],"mappings":"uWAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,WAAW,CAAE,qCADM,CAEnBC,aAAa,CAAE,qCAFI,CAArB,CAKA;AACA;AACA,GACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,eACDN,QAAQ,CAACG,YAAD,CADP,wCACxBI,OADwB,eACfC,UADe,uCAEXN,kBAAkB,EAFP,CAEvBO,OAFuB,qBAEvBA,OAFuB,CAI/BV,SAAS,CAAC,UAAM,CACd,GAAIU,OAAJ,CAAa,CACX,GAAI,CACF,GAAMC,CAAAA,SAAS,CAAGT,OAAO,CAACU,GAAR,mBAAuBF,OAAvB,EAAlB,CAEA,GAAIC,SAAJ,CAAe,CACb,GAAME,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAArB,CAEAF,UAAU,CAAC,SAACO,WAAD,wCACNA,WADM,MAETC,QAAQ,CAAEJ,YAAY,CAACI,QAFd,CAGTC,KAAK,CAAEL,YAAY,CAACM,MAHX,IAAD,CAAV,CAKD,CACF,CAAC,MAAOC,KAAP,CAAc,CACdX,UAAU,CAACL,YAAD,CAAV,CACD,CACF,CAhBD,IAgBO,CACLK,UAAU,CAACL,YAAD,CAAV,CACD,CACF,CApBQ,CAoBN,CAACM,OAAD,CAAUD,UAAV,CApBM,CAAT,CAsBA,MAAOD,CAAAA,OAAP,CACD,CA3BD,CA6BA,cAAeD,CAAAA,kBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport { useActiveWeb3React } from 'hooks'\r\n\r\nconst initialState = {\r\n  profileLink: 'https://pancakeswap.finance/profile',\r\n  noProfileLink: 'https://pancakeswap.finance/profile',\r\n}\r\n\r\n/**\r\n * Note - this will only work if the app is on the same domain\r\n */\r\nconst useGetLocalProfile = () => {\r\n  const [profile, setProfile] = useState(initialState)\r\n  const { account } = useActiveWeb3React()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      try {\r\n        const localData = Cookies.get(`profile_${account}`)\r\n\r\n        if (localData) {\r\n          const localProfile = JSON.parse(localData)\r\n\r\n          setProfile((prevProfile) => ({\r\n            ...prevProfile,\r\n            username: localProfile.username,\r\n            image: localProfile.avatar,\r\n          }))\r\n        }\r\n      } catch (error) {\r\n        setProfile(initialState)\r\n      }\r\n    } else {\r\n      setProfile(initialState)\r\n    }\r\n  }, [account, setProfile])\r\n\r\n  return profile\r\n}\r\n\r\nexport default useGetLocalProfile\r\n"]},"metadata":{},"sourceType":"module"}