{"ast":null,"code":"\"use strict\";\n\nclass Semaphore {\n  constructor(count) {\n    this.tasks = [];\n    this.count = count;\n  }\n\n  sched() {\n    if (this.count > 0 && this.tasks.length > 0) {\n      this.count--;\n      let next = this.tasks.shift();\n\n      if (next === undefined) {\n        throw \"Unexpected undefined value in tasks list\";\n      }\n\n      next();\n    }\n  }\n\n  acquire() {\n    return new Promise((res, rej) => {\n      var task = () => {\n        var released = false;\n        res(() => {\n          if (!released) {\n            released = true;\n            this.count++;\n            this.sched();\n          }\n        });\n      };\n\n      this.tasks.push(task);\n\n      if (process && process.nextTick) {\n        process.nextTick(this.sched.bind(this));\n      } else {\n        setImmediate(this.sched.bind(this));\n      }\n    });\n  }\n\n  use(f) {\n    return this.acquire().then(release => {\n      return f().then(res => {\n        release();\n        return res;\n      }).catch(err => {\n        release();\n        throw err;\n      });\n    });\n  }\n\n}\n\nexports.Semaphore = Semaphore;\n\nclass Mutex extends Semaphore {\n  constructor() {\n    super(1);\n  }\n\n}\n\nexports.Mutex = Mutex;","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAAA,MAAA,SAAA,CAAA;AAII,EAAA,WAAA,CAAY,KAAZ,EAAyB;AAHjB,SAAA,KAAA,GAAwB,EAAxB;AAIJ,SAAK,KAAL,GAAa,KAAb;AACH;;AAEO,EAAA,KAAK,GAAA;AACT,QAAI,KAAK,KAAL,GAAa,CAAb,IAAkB,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA1C,EAA6C;AACzC,WAAK,KAAL;AACA,UAAI,IAAI,GAAG,KAAK,KAAL,CAAW,KAAX,EAAX;;AACA,UAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,cAAM,0CAAN;AACH;;AAED,MAAA,IAAI;AACP;AACJ;;AAEM,EAAA,OAAO,GAAA;AACV,WAAO,IAAI,OAAJ,CAAwB,CAAC,GAAD,EAAM,GAAN,KAAS;AACpC,UAAI,IAAI,GAAG,MAAA;AACP,YAAI,QAAQ,GAAG,KAAf;AACA,QAAA,GAAG,CAAC,MAAA;AACA,cAAI,CAAC,QAAL,EAAe;AACX,YAAA,QAAQ,GAAG,IAAX;AACA,iBAAK,KAAL;AACA,iBAAK,KAAL;AACH;AACJ,SANE,CAAH;AAOH,OATD;;AAUA,WAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;;AACA,UAAI,OAAO,IAAI,OAAO,CAAC,QAAvB,EAAiC;AAC7B,QAAA,OAAO,CAAC,QAAR,CAAiB,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAjB;AACH,OAFD,MAEO;AACH,QAAA,YAAY,CAAC,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAD,CAAZ;AACH;AACJ,KAjBM,CAAP;AAkBH;;AAEM,EAAA,GAAG,CAAI,CAAJ,EAAuB;AAC7B,WAAO,KAAK,OAAL,GACN,IADM,CACD,OAAO,IAAA;AACT,aAAO,CAAC,GACP,IADM,CACA,GAAD,IAAI;AACN,QAAA,OAAO;AACP,eAAO,GAAP;AACH,OAJM,EAKN,KALM,CAKC,GAAD,IAAI;AACP,QAAA,OAAO;AACP,cAAM,GAAN;AACH,OARM,CAAP;AASH,KAXM,CAAP;AAYH;;AAtDL;;AAAa,OAAA,CAAA,SAAA,GAAS,SAAT;;AAyDb,MAAA,KAAA,SAA2B,SAA3B,CAAoC;AAChC,EAAA,WAAA,GAAA;AACI,UAAM,CAAN;AACH;;AAH+B;;AAAvB,OAAA,CAAA,KAAA,GAAK,KAAL","sourceRoot":"","sourcesContent":["\"use strict\";\r\nclass Semaphore {\r\n    constructor(count) {\r\n        this.tasks = [];\r\n        this.count = count;\r\n    }\r\n    sched() {\r\n        if (this.count > 0 && this.tasks.length > 0) {\r\n            this.count--;\r\n            let next = this.tasks.shift();\r\n            if (next === undefined) {\r\n                throw \"Unexpected undefined value in tasks list\";\r\n            }\r\n            next();\r\n        }\r\n    }\r\n    acquire() {\r\n        return new Promise((res, rej) => {\r\n            var task = () => {\r\n                var released = false;\r\n                res(() => {\r\n                    if (!released) {\r\n                        released = true;\r\n                        this.count++;\r\n                        this.sched();\r\n                    }\r\n                });\r\n            };\r\n            this.tasks.push(task);\r\n            if (process && process.nextTick) {\r\n                process.nextTick(this.sched.bind(this));\r\n            }\r\n            else {\r\n                setImmediate(this.sched.bind(this));\r\n            }\r\n        });\r\n    }\r\n    use(f) {\r\n        return this.acquire()\r\n            .then(release => {\r\n            return f()\r\n                .then((res) => {\r\n                release();\r\n                return res;\r\n            })\r\n                .catch((err) => {\r\n                release();\r\n                throw err;\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.Semaphore = Semaphore;\r\nclass Mutex extends Semaphore {\r\n    constructor() {\r\n        super(1);\r\n    }\r\n}\r\nexports.Mutex = Mutex;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}