{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction OpaqueType() {\n  return function (value) {\n    return value;\n  };\n}\n\nexports.OpaqueType = OpaqueType;\nexports.HexString = OpaqueType();\nexports.AddressString = OpaqueType();\nexports.BigIntString = OpaqueType();\n\nfunction IntNumber(num) {\n  return Math.floor(num);\n}\n\nexports.IntNumber = IntNumber;\nexports.RegExpString = OpaqueType();","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/walletlink/dist/types.js"],"names":["Object","defineProperty","exports","value","OpaqueType","HexString","AddressString","BigIntString","IntNumber","num","Math","floor","RegExpString"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,UAAT,GAAsB;AAClB,SAAO,UAACD,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAP;AACH;;AACDD,OAAO,CAACE,UAAR,GAAqBA,UAArB;AACAF,OAAO,CAACG,SAAR,GAAoBD,UAAU,EAA9B;AACAF,OAAO,CAACI,aAAR,GAAwBF,UAAU,EAAlC;AACAF,OAAO,CAACK,YAAR,GAAuBH,UAAU,EAAjC;;AACA,SAASI,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,SAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACH;;AACDP,OAAO,CAACM,SAAR,GAAoBA,SAApB;AACAN,OAAO,CAACU,YAAR,GAAuBR,UAAU,EAAjC","sourcesContent":["\"use strict\";\r\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\r\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\r\n// Licensed under the Apache License, version 2.0\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction OpaqueType() {\r\n    return (value) => value;\r\n}\r\nexports.OpaqueType = OpaqueType;\r\nexports.HexString = OpaqueType();\r\nexports.AddressString = OpaqueType();\r\nexports.BigIntString = OpaqueType();\r\nfunction IntNumber(num) {\r\n    return Math.floor(num);\r\n}\r\nexports.IntNumber = IntNumber;\r\nexports.RegExpString = OpaqueType();\r\n"]},"metadata":{},"sourceType":"script"}