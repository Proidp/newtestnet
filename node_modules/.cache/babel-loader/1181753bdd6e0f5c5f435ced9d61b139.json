{"ast":null,"code":"import _objectSpread from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Redirect}from'react-router-dom';import AddLiquidity from'./index';var OLD_PATH_STRUCTURE=/^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/;export function RedirectOldAddLiquidityPathStructure(props){var currencyIdA=props.match.params.currencyIdA;var match=currencyIdA.match(OLD_PATH_STRUCTURE);if(match===null||match===void 0?void 0:match.length){return/*#__PURE__*/_jsx(Redirect,{to:\"/add/\".concat(match[1],\"/\").concat(match[2])});}return/*#__PURE__*/_jsx(AddLiquidity,_objectSpread({},props));}export function RedirectDuplicateTokenIds(props){var _props$match$params=props.match.params,currencyIdA=_props$match$params.currencyIdA,currencyIdB=_props$match$params.currencyIdB;if(currencyIdA.toLowerCase()===currencyIdB.toLowerCase()){return/*#__PURE__*/_jsx(Redirect,{to:\"/add/\".concat(currencyIdA)});}return/*#__PURE__*/_jsx(AddLiquidity,_objectSpread({},props));}","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/pages/AddLiquidity/redirects.tsx"],"names":["React","Redirect","AddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","props","currencyIdA","match","params","length","RedirectDuplicateTokenIds","currencyIdB","toLowerCase"],"mappings":"8NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,2CAA3B,CACA,MAAO,SAASC,CAAAA,oCAAT,CAA8CC,KAA9C,CAAmG,IAG1FC,CAAAA,WAH0F,CAKpGD,KALoG,CAEtGE,KAFsG,CAGpGC,MAHoG,CAG1FF,WAH0F,CAMxG,GAAMC,CAAAA,KAAK,CAAGD,WAAW,CAACC,KAAZ,CAAkBJ,kBAAlB,CAAd,CACA,GAAII,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEE,MAAX,CAAmB,CACjB,mBAAO,KAAC,QAAD,EAAU,EAAE,gBAAUF,KAAK,CAAC,CAAD,CAAf,aAAsBA,KAAK,CAAC,CAAD,CAA3B,CAAZ,EAAP,CACD,CAED,mBAAO,KAAC,YAAD,kBAAkBF,KAAlB,EAAP,CACD,CAED,MAAO,SAASK,CAAAA,yBAAT,CAAmCL,KAAnC,CAA6G,yBAK9GA,KAL8G,CAEhHE,KAFgH,CAG9GC,MAH8G,CAGpGF,WAHoG,qBAGpGA,WAHoG,CAGvFK,WAHuF,qBAGvFA,WAHuF,CAMlH,GAAIL,WAAW,CAACM,WAAZ,KAA8BD,WAAW,CAACC,WAAZ,EAAlC,CAA6D,CAC3D,mBAAO,KAAC,QAAD,EAAU,EAAE,gBAAUN,WAAV,CAAZ,EAAP,CACD,CACD,mBAAO,KAAC,YAAD,kBAAkBD,KAAlB,EAAP,CACD","sourcesContent":["import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n"]},"metadata":{},"sourceType":"module"}