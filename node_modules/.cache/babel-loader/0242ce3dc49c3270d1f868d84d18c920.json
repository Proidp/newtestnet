{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';/**\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */var api='https://api.pancakeswap.com/api/v1/price';var useGetPriceData=function useGetPriceData(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(api);case 3:response=_context.sent;_context.next=6;return response.json();case 6:res=_context.sent;setData(res);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Unable to fetch price data:',_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[setData]);return data;};export default useGetPriceData;","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/hooks/useGetPriceData.ts"],"names":["useEffect","useState","api","useGetPriceData","data","setData","fetchData","fetch","response","json","res","console","error"],"mappings":"yhBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CASA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,GAAG,CAAG,0CAAZ,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eACJF,QAAQ,CAAqB,IAArB,CADJ,wCACrBG,IADqB,eACfC,OADe,eAG5BL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,SAAS,0FAAG,0LAESC,CAAAA,KAAK,CAACL,GAAD,CAFd,QAERM,QAFQ,qCAGiBA,CAAAA,QAAQ,CAACC,IAAT,EAHjB,QAGRC,GAHQ,eAKdL,OAAO,CAACK,GAAD,CAAP,CALc,iFAOdC,OAAO,CAACC,KAAR,CAAc,6BAAd,cAPc,qEAAH,kBAATN,CAAAA,SAAS,0CAAf,CAWAA,SAAS,GACV,CAbQ,CAaN,CAACD,OAAD,CAbM,CAAT,CAeA,MAAOD,CAAAA,IAAP,CACD,CAnBD,CAqBA,cAAeD,CAAAA,eAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\ntype ApiResponse = {\r\n  prices: {\r\n    [key: string]: string\r\n  }\r\n  update_at: string\r\n}\r\n\r\n/**\r\n * Due to Cors the api was forked and a proxy was created\r\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\r\n */\r\nconst api = 'https://api.pancakeswap.com/api/v1/price'\r\n\r\nconst useGetPriceData = () => {\r\n  const [data, setData] = useState<ApiResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(api)\r\n        const res: ApiResponse = await response.json()\r\n\r\n        setData(res)\r\n      } catch (error) {\r\n        console.error('Unable to fetch price data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n\r\nexport default useGetPriceData\r\n"]},"metadata":{},"sourceType":"module"}