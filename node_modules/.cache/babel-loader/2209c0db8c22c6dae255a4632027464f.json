{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useMemo}from'react';import{CheckmarkCircleIcon,ErrorIcon,Flex,LinkExternal,Text,Modal,Button}from'@pancakeswap-libs/uikit';import{useActiveWeb3React}from'hooks';import{getBscScanLink}from'utils';import{isTransactionRecent,useAllTransactions}from'state/transactions/hooks';import Loader from'components/Loader';// TODO: Fix UI Kit typings\nvar defaultOnDismiss=function defaultOnDismiss(){return null;};var newTransactionsFirst=function newTransactionsFirst(a,b){return b.addedTime-a.addedTime;};var getRowStatus=function getRowStatus(sortedRecentTransaction){var hash=sortedRecentTransaction.hash,receipt=sortedRecentTransaction.receipt;if(!hash){return{icon:/*#__PURE__*/_jsx(Loader,{}),color:'text'};}if(hash&&(receipt===null||receipt===void 0?void 0:receipt.status)===1){return{icon:/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}),color:'success'};}return{icon:/*#__PURE__*/_jsx(ErrorIcon,{color:\"failure\"}),color:'failure'};};var RecentTransactionsModal=function RecentTransactionsModal(_ref){var _ref$onDismiss=_ref.onDismiss,onDismiss=_ref$onDismiss===void 0?defaultOnDismiss:_ref$onDismiss,translateString=_ref.translateString;var TranslateString=translateString;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var allTransactions=useAllTransactions();// Logic taken from Web3Status/index.tsx line 175\nvar sortedRecentTransactions=useMemo(function(){var txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);return/*#__PURE__*/_jsxs(Modal,{title:TranslateString(1202,'Recent transactions'),onDismiss:onDismiss,children:[!account&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{mb:\"8px\",bold:true,children:\"Please connect your wallet to view your recent transactions\"}),/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",scale:\"sm\",onClick:onDismiss,children:\"Close\"})]}),account&&chainId&&sortedRecentTransactions.length===0&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{mb:\"8px\",bold:true,children:\"No recent transactions\"}),/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",scale:\"sm\",onClick:onDismiss,children:\"Close\"})]}),account&&chainId&&sortedRecentTransactions.map(function(sortedRecentTransaction){var hash=sortedRecentTransaction.hash,summary=sortedRecentTransaction.summary;var _getRowStatus=getRowStatus(sortedRecentTransaction),icon=_getRowStatus.icon,color=_getRowStatus.color;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"4px\",children:[/*#__PURE__*/_jsx(LinkExternal,{href:getBscScanLink(chainId,hash,'transaction'),color:color,children:summary!==null&&summary!==void 0?summary:hash}),icon]},hash)});})]});};export default RecentTransactionsModal;","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/components/PageHeader/RecentTransactionsModal.tsx"],"names":["React","useMemo","CheckmarkCircleIcon","ErrorIcon","Flex","LinkExternal","Text","Modal","Button","useActiveWeb3React","getBscScanLink","isTransactionRecent","useAllTransactions","Loader","defaultOnDismiss","newTransactionsFirst","a","b","addedTime","getRowStatus","sortedRecentTransaction","hash","receipt","icon","color","status","RecentTransactionsModal","onDismiss","translateString","TranslateString","account","chainId","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","length","map","summary"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@pancakeswap-libs/uikit'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport Loader from 'components/Loader'\r\n\r\ntype RecentTransactionsModalProps = {\r\n  onDismiss?: () => void\r\n  translateString: (translationId: number, fallback: string) => (string)\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\r\n\r\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\r\n  const { hash, receipt } = sortedRecentTransaction\r\n\r\n  if (!hash) {\r\n    return { icon: <Loader />, color: 'text' }\r\n  }\r\n\r\n  if (hash && receipt?.status === 1) {\r\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\r\n  }\r\n\r\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\r\n}\r\n\r\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, translateString }: RecentTransactionsModalProps) => {\r\n  const TranslateString = translateString\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  // Logic taken from Web3Status/index.tsx line 175\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1202, 'Recent transactions')} onDismiss={onDismiss}>\r\n      {!account && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            Please connect your wallet to view your recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account && chainId && sortedRecentTransactions.length === 0 && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            No recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account &&\r\n        chainId &&\r\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\r\n          const { hash, summary } = sortedRecentTransaction\r\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\r\n\r\n          return (\r\n            <>\r\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n                <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')} color={color}>\r\n                  {summary ?? hash}\r\n                </LinkExternal>\r\n                {icon}\r\n              </Flex>\r\n            </>\r\n          )\r\n        })}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RecentTransactionsModal\r\n"]},"metadata":{},"sourceType":"module"}