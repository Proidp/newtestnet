{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst RelayMessage_1 = require(\"./RelayMessage\");\n\nfunction Web3ResponseMessage(params) {\n  return Object.assign({\n    type: RelayMessage_1.RelayMessageType.WEB3_RESPONSE\n  }, params);\n}\n\nexports.Web3ResponseMessage = Web3ResponseMessage;\n\nfunction isWeb3ResponseMessage(msg) {\n  return msg && msg.type === RelayMessage_1.RelayMessageType.WEB3_RESPONSE;\n}\n\nexports.isWeb3ResponseMessage = isWeb3ResponseMessage;","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/walletlink/dist/relay/Web3ResponseMessage.js"],"names":["Object","defineProperty","exports","value","RelayMessage_1","require","Web3ResponseMessage","params","assign","type","RelayMessageType","WEB3_RESPONSE","isWeb3ResponseMessage","msg"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA9B;;AACA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACjC,SAAOP,MAAM,CAACQ,MAAP,CAAc;AAAEC,IAAAA,IAAI,EAAEL,cAAc,CAACM,gBAAf,CAAgCC;AAAxC,GAAd,EAAuEJ,MAAvE,CAAP;AACH;;AACDL,OAAO,CAACI,mBAAR,GAA8BA,mBAA9B;;AACA,SAASM,qBAAT,CAA+BC,GAA/B,EAAoC;AAChC,SAAOA,GAAG,IAAIA,GAAG,CAACJ,IAAJ,KAAaL,cAAc,CAACM,gBAAf,CAAgCC,aAA3D;AACH;;AACDT,OAAO,CAACU,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\r\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\r\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\r\n// Licensed under the Apache License, version 2.0\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst RelayMessage_1 = require(\"./RelayMessage\");\r\nfunction Web3ResponseMessage(params) {\r\n    return Object.assign({ type: RelayMessage_1.RelayMessageType.WEB3_RESPONSE }, params);\r\n}\r\nexports.Web3ResponseMessage = Web3ResponseMessage;\r\nfunction isWeb3ResponseMessage(msg) {\r\n    return msg && msg.type === RelayMessage_1.RelayMessageType.WEB3_RESPONSE;\r\n}\r\nexports.isWeb3ResponseMessage = isWeb3ResponseMessage;\r\n"]},"metadata":{},"sourceType":"script"}