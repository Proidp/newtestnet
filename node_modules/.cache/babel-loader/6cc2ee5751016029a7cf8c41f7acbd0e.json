{"ast":null,"code":"import _slicedToArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{useDispatch}from'react-redux';import{useActiveWeb3React}from'../../hooks';import useDebounce from'../../hooks/useDebounce';import useIsWindowVisible from'../../hooks/useIsWindowVisible';import{updateBlockNumber}from'./actions';export default function Updater(){var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,chainId=_useActiveWeb3React.chainId;var dispatch=useDispatch();var windowVisible=useIsWindowVisible();var _useState=useState({chainId:chainId,blockNumber:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var blockNumberCallback=useCallback(function(blockNumber){setState(function(s){if(chainId===s.chainId){if(typeof s.blockNumber!=='number')return{chainId:chainId,blockNumber:blockNumber};return{chainId:chainId,blockNumber:Math.max(blockNumber,s.blockNumber)};}return s;});},[chainId,setState]);// attach/detach listeners\nuseEffect(function(){if(!library||!chainId||!windowVisible)return undefined;setState({chainId:chainId,blockNumber:null});library.getBlockNumber().then(blockNumberCallback).catch(function(error){return console.error(\"Failed to get block number for chainId: \".concat(chainId),error);});library.on('block',blockNumberCallback);return function(){library.removeListener('block',blockNumberCallback);};},[dispatch,chainId,library,blockNumberCallback,windowVisible]);var debouncedState=useDebounce(state,100);useEffect(function(){if(!debouncedState.chainId||!debouncedState.blockNumber||!windowVisible)return;dispatch(updateBlockNumber({chainId:debouncedState.chainId,blockNumber:debouncedState.blockNumber}));},[windowVisible,dispatch,debouncedState.blockNumber,debouncedState.chainId]);return null;}","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/state/application/updater.ts"],"names":["useCallback","useEffect","useState","useDispatch","useActiveWeb3React","useDebounce","useIsWindowVisible","updateBlockNumber","Updater","library","chainId","dispatch","windowVisible","blockNumber","state","setState","blockNumberCallback","s","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"mappings":"oLAAA,OAASA,WAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CACA,OAASC,iBAAT,KAAkC,WAAlC,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAyB,yBACTJ,kBAAkB,EADT,CAC9BK,OAD8B,qBAC9BA,OAD8B,CACrBC,OADqB,qBACrBA,OADqB,CAEtC,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,aAAa,CAAGN,kBAAkB,EAAxC,CAJsC,cAMZJ,QAAQ,CAA8D,CAC9FQ,OAAO,CAAPA,OAD8F,CAE9FG,WAAW,CAAE,IAFiF,CAA9D,CANI,wCAM/BC,KAN+B,eAMxBC,QANwB,eAWtC,GAAMC,CAAAA,mBAAmB,CAAGhB,WAAW,CACrC,SAACa,WAAD,CAAyB,CACvBE,QAAQ,CAAC,SAACE,CAAD,CAAO,CACd,GAAIP,OAAO,GAAKO,CAAC,CAACP,OAAlB,CAA2B,CACzB,GAAI,MAAOO,CAAAA,CAAC,CAACJ,WAAT,GAAyB,QAA7B,CAAuC,MAAO,CAAEH,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAXA,WAAX,CAAP,CACvC,MAAO,CAAEH,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAEK,IAAI,CAACC,GAAL,CAASN,WAAT,CAAsBI,CAAC,CAACJ,WAAxB,CAAxB,CAAP,CACD,CACD,MAAOI,CAAAA,CAAP,CACD,CANO,CAAR,CAOD,CAToC,CAUrC,CAACP,OAAD,CAAUK,QAAV,CAVqC,CAAvC,CAaA;AACAd,SAAS,CAAC,UAAM,CACd,GAAI,CAACQ,OAAD,EAAY,CAACC,OAAb,EAAwB,CAACE,aAA7B,CAA4C,MAAOQ,CAAAA,SAAP,CAE5CL,QAAQ,CAAC,CAAEL,OAAO,CAAPA,OAAF,CAAWG,WAAW,CAAE,IAAxB,CAAD,CAAR,CAEAJ,OAAO,CACJY,cADH,GAEGC,IAFH,CAEQN,mBAFR,EAGGO,KAHH,CAGS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACD,KAAR,mDAAyDd,OAAzD,EAAoEc,KAApE,CAAX,EAHT,EAKAf,OAAO,CAACiB,EAAR,CAAW,OAAX,CAAoBV,mBAApB,EACA,MAAO,WAAM,CACXP,OAAO,CAACkB,cAAR,CAAuB,OAAvB,CAAgCX,mBAAhC,EACD,CAFD,CAGD,CAdQ,CAcN,CAACL,QAAD,CAAWD,OAAX,CAAoBD,OAApB,CAA6BO,mBAA7B,CAAkDJ,aAAlD,CAdM,CAAT,CAgBA,GAAMgB,CAAAA,cAAc,CAAGvB,WAAW,CAACS,KAAD,CAAQ,GAAR,CAAlC,CAEAb,SAAS,CAAC,UAAM,CACd,GAAI,CAAC2B,cAAc,CAAClB,OAAhB,EAA2B,CAACkB,cAAc,CAACf,WAA3C,EAA0D,CAACD,aAA/D,CAA8E,OAC9ED,QAAQ,CAACJ,iBAAiB,CAAC,CAAEG,OAAO,CAAEkB,cAAc,CAAClB,OAA1B,CAAmCG,WAAW,CAAEe,cAAc,CAACf,WAA/D,CAAD,CAAlB,CAAR,CACD,CAHQ,CAGN,CAACD,aAAD,CAAgBD,QAAhB,CAA0BiB,cAAc,CAACf,WAAzC,CAAsDe,cAAc,CAAClB,OAArE,CAHM,CAAT,CAKA,MAAO,KAAP,CACD","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  const windowVisible = useIsWindowVisible()\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  })\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((s) => {\r\n        if (chainId === s.chainId) {\r\n          if (typeof s.blockNumber !== 'number') return { chainId, blockNumber }\r\n          return { chainId, blockNumber: Math.max(blockNumber, s.blockNumber) }\r\n        }\r\n        return s\r\n      })\r\n    },\r\n    [chainId, setState]\r\n  )\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined\r\n\r\n    setState({ chainId, blockNumber: null })\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\r\n\r\n    library.on('block', blockNumberCallback)\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback)\r\n    }\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\r\n\r\n  const debouncedState = useDebounce(state, 100)\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\r\n\r\n  return null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}