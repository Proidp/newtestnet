{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _asyncToGenerator from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from'react';import{BigNumber}from'@ethersproject/bignumber';import{currencyEquals,ETHER,WETH}from'@pancakeswap-libs/sdk';import{Button,CardBody,AddIcon,Text as UIKitText}from'@pancakeswap-libs/uikit';import{LightCard}from'components/Card';import{AutoColumn,ColumnCenter}from'components/Column';import TransactionConfirmationModal,{ConfirmationModalContent}from'components/TransactionConfirmationModal';import CardNav from'components/CardNav';import CurrencyInputPanel from'components/CurrencyInputPanel';import DoubleCurrencyLogo from'components/DoubleLogo';import{AddRemoveTabs}from'components/NavigationTabs';import{MinimalPositionCard}from'components/PositionCard';import Row,{RowBetween,RowFlat}from'components/Row';import{PairState}from'data/Reserves';import{useActiveWeb3React}from'hooks';import{useCurrency}from'hooks/Tokens';import{ApprovalState,useApproveCallback}from'hooks/useApproveCallback';import{Field}from'state/mint/actions';import{useDerivedMintInfo,useMintActionHandlers,useMintState}from'state/mint/hooks';import{useTransactionAdder}from'state/transactions/hooks';import{useIsExpertMode,useUserDeadline,useUserSlippageTolerance}from'state/user/hooks';import{calculateSlippageAmount,getRouterContract}from'utils';import{maxAmountSpend}from'utils/maxAmountSpend';import{wrappedCurrency}from'utils/wrappedCurrency';import{currencyId}from'utils/currencyId';import Pane from'components/Pane';import ConnectWalletButton from'components/ConnectWalletButton';import useI18n from'hooks/useI18n';import AppBody from'../AppBody';import{Dots,Wrapper}from'../Pool/styleds';import{ConfirmAddModalBottom}from'./ConfirmAddModalBottom';import{PoolPriceBar}from'./PoolPriceBar';import{ROUTER_ADDRESS}from'../../constants';export default function AddLiquidity(_ref){var _parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$Field$,_currencies$Field$CUR5,_parsedAmounts$Field$2,_currencies$Field$CUR6,_currencies$Field$CUR7,_currencies$Field$CUR8,_currencies$Field$CUR9,_currencies$Field$CUR10;var _ref$match$params=_ref.match.params,currencyIdA=_ref$match$params.currencyIdA,currencyIdB=_ref$match$params.currencyIdB,history=_ref.history;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var currencyA=useCurrency(currencyIdA);var currencyB=useCurrency(currencyIdB);var TranslateString=useI18n();var oneCurrencyIsWBNB=Boolean(chainId&&(currencyA&&currencyEquals(currencyA,WETH[chainId])||currencyB&&currencyEquals(currencyB,WETH[chainId])));var expertMode=useIsExpertMode();// mint state\nvar _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var _useDerivedMintInfo=useDerivedMintInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined),dependentField=_useDerivedMintInfo.dependentField,currencies=_useDerivedMintInfo.currencies,pair=_useDerivedMintInfo.pair,pairState=_useDerivedMintInfo.pairState,currencyBalances=_useDerivedMintInfo.currencyBalances,parsedAmounts=_useDerivedMintInfo.parsedAmounts,price=_useDerivedMintInfo.price,noLiquidity=_useDerivedMintInfo.noLiquidity,liquidityMinted=_useDerivedMintInfo.liquidityMinted,poolTokenPercentage=_useDerivedMintInfo.poolTokenPercentage,error=_useDerivedMintInfo.error;var _useMintActionHandler=useMintActionHandlers(noLiquidity),onFieldAInput=_useMintActionHandler.onFieldAInput,onFieldBInput=_useMintActionHandler.onFieldBInput;var isValid=!error;// modal and loading\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirm=_useState2[0],setShowConfirm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attemptingTxn=_useState4[0],setAttemptingTxn=_useState4[1];// clicked confirm\n// txn values\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];// custom from users settings\nvar _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// custom from users\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),txHash=_useState6[0],setTxHash=_useState6[1];// get formatted amounts\nvar formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,noLiquidity?otherTypedValue:(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);// get the max amounts user can add\nvar maxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,maxAmountSpend(currencyBalances[field])));},{});var atMaxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){var _maxAmounts$field,_parsedAmounts$field;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,(_maxAmounts$field=maxAmounts[field])===null||_maxAmounts$field===void 0?void 0:_maxAmounts$field.equalTo((_parsedAmounts$field=parsedAmounts[field])!==null&&_parsedAmounts$field!==void 0?_parsedAmounts$field:'0')));},{});// check whether the user has approved the router on the tokens\nvar _useApproveCallback=useApproveCallback(parsedAmounts[Field.CURRENCY_A],ROUTER_ADDRESS),_useApproveCallback2=_slicedToArray(_useApproveCallback,2),approvalA=_useApproveCallback2[0],approveACallback=_useApproveCallback2[1];var _useApproveCallback3=useApproveCallback(parsedAmounts[Field.CURRENCY_B],ROUTER_ADDRESS),_useApproveCallback4=_slicedToArray(_useApproveCallback3,2),approvalB=_useApproveCallback4[0],approveBCallback=_useApproveCallback4[1];var addTransaction=useTransactionAdder();function onAdd(){return _onAdd.apply(this,arguments);}function _onAdd(){_onAdd=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _amountsMin;var router,parsedAmountA,parsedAmountB,amountsMin,deadlineFromNow,estimate,method,args,value,_wrappedCurrency$addr,_wrappedCurrency,tokenBIsBNB,_wrappedCurrency$addr2,_wrappedCurrency2,_wrappedCurrency$addr3,_wrappedCurrency3;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!chainId||!library||!account)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:router=getRouterContract(chainId,library,account);parsedAmountA=parsedAmounts[Field.CURRENCY_A],parsedAmountB=parsedAmounts[Field.CURRENCY_B];if(!(!parsedAmountA||!parsedAmountB||!currencyA||!currencyB)){_context2.next=6;break;}return _context2.abrupt(\"return\");case 6:amountsMin=(_amountsMin={},_defineProperty(_amountsMin,Field.CURRENCY_A,calculateSlippageAmount(parsedAmountA,noLiquidity?0:allowedSlippage)[0]),_defineProperty(_amountsMin,Field.CURRENCY_B,calculateSlippageAmount(parsedAmountB,noLiquidity?0:allowedSlippage)[0]),_amountsMin);deadlineFromNow=Math.ceil(Date.now()/1000)+deadline;if(currencyA===ETHER||currencyB===ETHER){tokenBIsBNB=currencyB===ETHER;estimate=router.estimateGas.addLiquidityETH;method=router.addLiquidityETH;args=[(_wrappedCurrency$addr=(_wrappedCurrency=wrappedCurrency(tokenBIsBNB?currencyA:currencyB,chainId))===null||_wrappedCurrency===void 0?void 0:_wrappedCurrency.address)!==null&&_wrappedCurrency$addr!==void 0?_wrappedCurrency$addr:'',// token\n(tokenBIsBNB?parsedAmountA:parsedAmountB).raw.toString(),// token desired\namountsMin[tokenBIsBNB?Field.CURRENCY_A:Field.CURRENCY_B].toString(),// token min\namountsMin[tokenBIsBNB?Field.CURRENCY_B:Field.CURRENCY_A].toString(),// eth min\naccount,deadlineFromNow];value=BigNumber.from((tokenBIsBNB?parsedAmountB:parsedAmountA).raw.toString());}else{estimate=router.estimateGas.addLiquidity;method=router.addLiquidity;args=[(_wrappedCurrency$addr2=(_wrappedCurrency2=wrappedCurrency(currencyA,chainId))===null||_wrappedCurrency2===void 0?void 0:_wrappedCurrency2.address)!==null&&_wrappedCurrency$addr2!==void 0?_wrappedCurrency$addr2:'',(_wrappedCurrency$addr3=(_wrappedCurrency3=wrappedCurrency(currencyB,chainId))===null||_wrappedCurrency3===void 0?void 0:_wrappedCurrency3.address)!==null&&_wrappedCurrency$addr3!==void 0?_wrappedCurrency$addr3:'',parsedAmountA.raw.toString(),parsedAmountB.raw.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadlineFromNow];value=null;}estimate=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",5000000);case 1:case\"end\":return _context.stop();}}},_callee);}));return function estimate(){return _ref2.apply(this,arguments);};}();setAttemptingTxn(true);// const aa = await estimate(...args, value ? { value } : {})\n_context2.next=13;return estimate.apply(void 0,_toConsumableArray(args).concat([value?{value:value}:{}])).then(function(estimatedGasLimit){return method.apply(void 0,_toConsumableArray(args).concat([_objectSpread(_objectSpread({},value?{value:value}:{}),{},{// gasLimit: calculateGasMargin(estimatedGasLimit),\ngasLimit:estimatedGasLimit,gasPrice:20000000000})])).then(function(response){var _parsedAmounts$Field$3,_currencies$Field$CUR11,_parsedAmounts$Field$4,_currencies$Field$CUR12;setAttemptingTxn(false);addTransaction(response,{summary:\"Add \".concat((_parsedAmounts$Field$3=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$3===void 0?void 0:_parsedAmounts$Field$3.toSignificant(3),\" \").concat((_currencies$Field$CUR11=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR11===void 0?void 0:_currencies$Field$CUR11.symbol,\" and \").concat((_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.toSignificant(3),\" \").concat((_currencies$Field$CUR12=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR12===void 0?void 0:_currencies$Field$CUR12.symbol)});setTxHash(response.hash);});}).catch(function(e){setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\nif((e===null||e===void 0?void 0:e.code)!==4001){console.error(e);}});case 13:case\"end\":return _context2.stop();}}},_callee2);}));return _onAdd.apply(this,arguments);}var modalHeader=function modalHeader(){var _currencies$Field$CUR,_currencies$Field$CUR2,_currencies$Field$CUR3,_currencies$Field$CUR4;return noLiquidity?/*#__PURE__*/_jsx(AutoColumn,{gap:\"20px\",children:/*#__PURE__*/_jsx(LightCard,{mt:\"20px\",borderRadius:\"20px\",children:/*#__PURE__*/_jsxs(RowFlat,{children:[/*#__PURE__*/_jsx(UIKitText,{fontSize:\"48px\",mr:\"8px\",children:\"\".concat((_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol,\"/\").concat((_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]})})}):/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[/*#__PURE__*/_jsxs(RowFlat,{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(UIKitText,{fontSize:\"48px\",mr:\"8px\",children:liquidityMinted===null||liquidityMinted===void 0?void 0:liquidityMinted.toSignificant(6)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(UIKitText,{fontSize:\"24px\",children:\"\".concat((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol,\"/\").concat((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol,\" Pool Tokens\")})}),/*#__PURE__*/_jsx(UIKitText,{small:true,textAlign:\"left\",padding:\"8px 0 0 0 \",style:{fontStyle:'italic'},children:\"Output is estimated. If the price changes by more than \".concat(allowedSlippage/100,\"% your transaction will revert.\")})]});};var modalBottom=function modalBottom(){return/*#__PURE__*/_jsx(ConfirmAddModalBottom,{price:price,currencies:currencies,parsedAmounts:parsedAmounts,noLiquidity:noLiquidity,onAdd:onAdd,poolTokenPercentage:poolTokenPercentage});};var pendingText=\"Supplying \".concat((_parsedAmounts$Field$=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.toSignificant(6),\" \").concat((_currencies$Field$CUR5=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR5===void 0?void 0:_currencies$Field$CUR5.symbol,\" and \").concat((_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6),\" \").concat((_currencies$Field$CUR6=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol);var handleCurrencyASelect=useCallback(function(currA){var newCurrencyIdA=currencyId(currA);if(newCurrencyIdA===currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(currencyIdA));}else{history.push(\"/add/\".concat(newCurrencyIdA,\"/\").concat(currencyIdB));}},[currencyIdB,history,currencyIdA]);var handleCurrencyBSelect=useCallback(function(currB){var newCurrencyIdB=currencyId(currB);if(currencyIdA===newCurrencyIdB){if(currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(newCurrencyIdB));}else{history.push(\"/add/\".concat(newCurrencyIdB));}}else{history.push(\"/add/\".concat(currencyIdA||'BNB',\"/\").concat(newCurrencyIdB));}},[currencyIdA,history,currencyIdB]);var handleDismissConfirmation=useCallback(function(){setShowConfirm(false);// if there was a tx hash, we want to clear the input\nif(txHash){onFieldAInput('');}setTxHash('');},[onFieldAInput,txHash]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CardNav,{activeIndex:1}),/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AddRemoveTabs,{adding:true}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(TransactionConfirmationModal,{isOpen:showConfirm,onDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash,content:function content(){return/*#__PURE__*/_jsx(ConfirmationModalContent,{title:noLiquidity?TranslateString(1154,'You are creating a pool'):TranslateString(1156,'You will receive'),onDismiss:handleDismissConfirmation,topContent:modalHeader,bottomContent:modalBottom});},pendingText:pendingText}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[noLiquidity&&/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(Pane,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",children:[/*#__PURE__*/_jsx(UIKitText,{children:TranslateString(1158,'You are the first liquidity provider.')}),/*#__PURE__*/_jsx(UIKitText,{children:TranslateString(1160,'The ratio of tokens you add will set the price of this pool.')}),/*#__PURE__*/_jsx(UIKitText,{children:TranslateString(1162,'Once you are happy with the rate click supply to review.')})]})})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_A],onUserInput:onFieldAInput,onMax:function onMax(){var _maxAmounts$Field$CUR,_maxAmounts$Field$CUR2;onFieldAInput((_maxAmounts$Field$CUR=(_maxAmounts$Field$CUR2=maxAmounts[Field.CURRENCY_A])===null||_maxAmounts$Field$CUR2===void 0?void 0:_maxAmounts$Field$CUR2.toExact())!==null&&_maxAmounts$Field$CUR!==void 0?_maxAmounts$Field$CUR:'');},onCurrencySelect:handleCurrencyASelect,showMaxButton:!atMaxAmounts[Field.CURRENCY_A],currency:currencies[Field.CURRENCY_A],id:\"add-liquidity-input-tokena\",showCommonBases:false}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(AddIcon,{color:\"textSubtle\"})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_B],onUserInput:onFieldBInput,onCurrencySelect:handleCurrencyBSelect,onMax:function onMax(){var _maxAmounts$Field$CUR3,_maxAmounts$Field$CUR4;onFieldBInput((_maxAmounts$Field$CUR3=(_maxAmounts$Field$CUR4=maxAmounts[Field.CURRENCY_B])===null||_maxAmounts$Field$CUR4===void 0?void 0:_maxAmounts$Field$CUR4.toExact())!==null&&_maxAmounts$Field$CUR3!==void 0?_maxAmounts$Field$CUR3:'');},showMaxButton:!atMaxAmounts[Field.CURRENCY_B],currency:currencies[Field.CURRENCY_B],id:\"add-liquidity-input-tokenb\",showCommonBases:false}),currencies[Field.CURRENCY_A]&&currencies[Field.CURRENCY_B]&&pairState!==PairState.INVALID&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(UIKitText,{style:{textTransform:'uppercase',fontWeight:600},color:\"textSubtle\",fontSize:\"12px\",mb:\"2px\",children:noLiquidity?TranslateString(1164,'Initial prices and pool share'):TranslateString(1166,'Prices and pool share')}),/*#__PURE__*/_jsx(Pane,{children:/*#__PURE__*/_jsx(PoolPriceBar,{currencies:currencies,poolTokenPercentage:poolTokenPercentage,noLiquidity:noLiquidity,price:price})})]}),!account?/*#__PURE__*/_jsx(ConnectWalletButton,{width:\"100%\"}):/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[(approvalA===ApprovalState.NOT_APPROVED||approvalA===ApprovalState.PENDING||approvalB===ApprovalState.NOT_APPROVED||approvalB===ApprovalState.PENDING)&&isValid&&/*#__PURE__*/_jsxs(RowBetween,{children:[approvalA!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveACallback,disabled:approvalA===ApprovalState.PENDING,style:{width:approvalB!==ApprovalState.APPROVED?'48%':'100%'},children:approvalA===ApprovalState.PENDING?/*#__PURE__*/_jsxs(Dots,{children:[\"Approving \",(_currencies$Field$CUR7=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR7===void 0?void 0:_currencies$Field$CUR7.symbol]}):\"Approve \".concat((_currencies$Field$CUR8=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR8===void 0?void 0:_currencies$Field$CUR8.symbol)}),approvalB!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveBCallback,disabled:approvalB===ApprovalState.PENDING,style:{width:approvalA!==ApprovalState.APPROVED?'48%':'100%'},children:approvalB===ApprovalState.PENDING?/*#__PURE__*/_jsxs(Dots,{children:[\"Approving \",(_currencies$Field$CUR9=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR9===void 0?void 0:_currencies$Field$CUR9.symbol]}):\"Approve \".concat((_currencies$Field$CUR10=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR10===void 0?void 0:_currencies$Field$CUR10.symbol)})]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(expertMode){onAdd();}else{setShowConfirm(true);}},disabled:!isValid||approvalA!==ApprovalState.APPROVED||approvalB!==ApprovalState.APPROVED,variant:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B]?'danger':'primary',width:\"100%\",children:error!==null&&error!==void 0?error:'Supply'})]})]})})]})]}),pair&&!noLiquidity&&pairState!==PairState.INVALID?/*#__PURE__*/_jsx(AutoColumn,{style:{minWidth:'20rem',marginTop:'1rem'},children:/*#__PURE__*/_jsx(MinimalPositionCard,{showUnwrapped:oneCurrencyIsWBNB,pair:pair})}):null]});}","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/pages/AddLiquidity/index.tsx"],"names":["React","useCallback","useState","BigNumber","currencyEquals","ETHER","WETH","Button","CardBody","AddIcon","Text","UIKitText","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CardNav","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserDeadline","useUserSlippageTolerance","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","currencyId","Pane","ConnectWalletButton","useI18n","AppBody","Dots","Wrapper","ConfirmAddModalBottom","PoolPriceBar","ROUTER_ADDRESS","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","currencyA","currencyB","TranslateString","oneCurrencyIsWBNB","Boolean","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","deadlineFromNow","Math","ceil","Date","now","tokenBIsBNB","estimate","estimateGas","addLiquidityETH","method","args","address","raw","toString","value","from","addLiquidity","then","estimatedGasLimit","gasLimit","gasPrice","response","summary","symbol","hash","catch","e","code","console","modalHeader","marginTop","fontStyle","modalBottom","pendingText","handleCurrencyASelect","currA","newCurrencyIdA","push","handleCurrencyBSelect","currB","newCurrencyIdB","handleDismissConfirmation","toExact","INVALID","textTransform","fontWeight","NOT_APPROVED","PENDING","APPROVED","width","minWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap-libs/sdk'\r\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@pancakeswap-libs/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn, ColumnCenter } from 'components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\r\nimport CardNav from 'components/CardNav'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { AddRemoveTabs } from 'components/NavigationTabs'\r\nimport { MinimalPositionCard } from 'components/PositionCard'\r\nimport Row, { RowBetween, RowFlat } from 'components/Row'\r\n\r\nimport { PairState } from 'data/Reserves'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\r\nimport { Field } from 'state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport Pane from 'components/Pane'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useI18n from 'hooks/useI18n'\r\nimport AppBody from '../AppBody'\r\nimport { Dots, Wrapper } from '../Pool/styleds'\r\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\r\nimport { PoolPriceBar } from './PoolPriceBar'\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n  const TranslateString = useI18n()\r\n\r\n  const oneCurrencyIsWBNB = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\r\n  )\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [deadline] = useUserDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsBNB = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadlineFromNow,\r\n      ]\r\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadlineFromNow,\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    estimate = async function() {\r\n      return 5000000;\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    // const aa = await estimate(...args, value ? { value } : {})\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          // gasLimit: calculateGasMargin(estimatedGasLimit),\r\n          gasLimit: estimatedGasLimit,\r\n          gasPrice: 20000000000\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        })\r\n      )\r\n      .catch((e) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (e?.code !== 4001) {\r\n          console.error(e)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <AutoColumn gap=\"20px\">\r\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\r\n          <RowFlat>\r\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\r\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n            </UIKitText>\r\n            <DoubleCurrencyLogo\r\n              currency0={currencies[Field.CURRENCY_A]}\r\n              currency1={currencies[Field.CURRENCY_B]}\r\n              size={30}\r\n            />\r\n          </RowFlat>\r\n        </LightCard>\r\n      </AutoColumn>\r\n    ) : (\r\n      <AutoColumn gap=\"20px\">\r\n        <RowFlat style={{ marginTop: '20px' }}>\r\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </UIKitText>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </RowFlat>\r\n        <Row>\r\n          <UIKitText fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </UIKitText>\r\n        </Row>\r\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\r\n          {`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </UIKitText>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencies[Field.CURRENCY_A]?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currA: Currency) => {\r\n      const newCurrencyIdA = currencyId(currA)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA]\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currB: Currency) => {\r\n      const newCurrencyIdB = currencyId(currB)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  return (\r\n    <>\r\n      <CardNav activeIndex={1} />\r\n      <AppBody>\r\n        <AddRemoveTabs adding />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={\r\n                  noLiquidity\r\n                    ? TranslateString(1154, 'You are creating a pool')\r\n                    : TranslateString(1156, 'You will receive')\r\n                }\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <CardBody>\r\n            <AutoColumn gap=\"20px\">\r\n              {noLiquidity && (\r\n                <ColumnCenter>\r\n                  <Pane>\r\n                    <AutoColumn gap=\"12px\">\r\n                      <UIKitText>{TranslateString(1158, 'You are the first liquidity provider.')}</UIKitText>\r\n                      <UIKitText>\r\n                        {TranslateString(1160, 'The ratio of tokens you add will set the price of this pool.')}\r\n                      </UIKitText>\r\n                      <UIKitText>\r\n                        {TranslateString(1162, 'Once you are happy with the rate click supply to review.')}\r\n                      </UIKitText>\r\n                    </AutoColumn>\r\n                  </Pane>\r\n                </ColumnCenter>\r\n              )}\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.CURRENCY_A]}\r\n                onUserInput={onFieldAInput}\r\n                onMax={() => {\r\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n                }}\r\n                onCurrencySelect={handleCurrencyASelect}\r\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n                currency={currencies[Field.CURRENCY_A]}\r\n                id=\"add-liquidity-input-tokena\"\r\n                showCommonBases={false}\r\n              />\r\n              <ColumnCenter>\r\n                <AddIcon color=\"textSubtle\" />\r\n              </ColumnCenter>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.CURRENCY_B]}\r\n                onUserInput={onFieldBInput}\r\n                onCurrencySelect={handleCurrencyBSelect}\r\n                onMax={() => {\r\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n                }}\r\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n                currency={currencies[Field.CURRENCY_B]}\r\n                id=\"add-liquidity-input-tokenb\"\r\n                showCommonBases={false}\r\n              />\r\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n                <div>\r\n                  <UIKitText\r\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\r\n                    color=\"textSubtle\"\r\n                    fontSize=\"12px\"\r\n                    mb=\"2px\"\r\n                  >\r\n                    {noLiquidity\r\n                      ? TranslateString(1164, 'Initial prices and pool share')\r\n                      : TranslateString(1166, 'Prices and pool share')}\r\n                  </UIKitText>\r\n                  <Pane>\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </Pane>\r\n                </div>\r\n              )}\r\n\r\n              {!account ? (\r\n                <ConnectWalletButton width=\"100%\" />\r\n              ) : (\r\n                <AutoColumn gap=\"md\">\r\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                    approvalA === ApprovalState.PENDING ||\r\n                    approvalB === ApprovalState.NOT_APPROVED ||\r\n                    approvalB === ApprovalState.PENDING) &&\r\n                    isValid && (\r\n                      <RowBetween>\r\n                        {approvalA !== ApprovalState.APPROVED && (\r\n                          <Button\r\n                            onClick={approveACallback}\r\n                            disabled={approvalA === ApprovalState.PENDING}\r\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\r\n                          >\r\n                            {approvalA === ApprovalState.PENDING ? (\r\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\r\n                            ) : (\r\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\r\n                            )}\r\n                          </Button>\r\n                        )}\r\n                        {approvalB !== ApprovalState.APPROVED && (\r\n                          <Button\r\n                            onClick={approveBCallback}\r\n                            disabled={approvalB === ApprovalState.PENDING}\r\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\r\n                          >\r\n                            {approvalB === ApprovalState.PENDING ? (\r\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\r\n                            ) : (\r\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\r\n                            )}\r\n                          </Button>\r\n                        )}\r\n                      </RowBetween>\r\n                    )}\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (expertMode) {\r\n                        onAdd()\r\n                      } else {\r\n                        setShowConfirm(true)\r\n                      }\r\n                    }}\r\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                    variant={\r\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                        ? 'danger'\r\n                        : 'primary'\r\n                    }\r\n                    width=\"100%\"\r\n                  >\r\n                    {error ?? 'Supply'}\r\n                  </Button>\r\n                </AutoColumn>\r\n              )}\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWBNB} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}