{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{INITIAL_ALLOWED_SLIPPAGE,DEFAULT_DEADLINE_FROM_NOW}from'../../constants';import{updateVersion}from'../global/actions';import{addSerializedPair,addSerializedToken,removeSerializedPair,removeSerializedToken,updateMatchesDarkMode,updateUserDarkMode,updateUserExpertMode,updateUserSlippageTolerance,updateUserDeadline,muteAudio,unmuteAudio}from'./actions';var currentTimestamp=function currentTimestamp(){return new Date().getTime();};function pairKey(token0Address,token1Address){return\"\".concat(token0Address,\";\").concat(token1Address);}export var initialState={userDarkMode:null,matchesDarkMode:false,userExpertMode:false,userSlippageTolerance:INITIAL_ALLOWED_SLIPPAGE,userDeadline:DEFAULT_DEADLINE_FROM_NOW,tokens:{},pairs:{},timestamp:currentTimestamp(),audioPlay:true};export default createReducer(initialState,function(builder){return builder.addCase(updateVersion,function(state){// slippage isnt being tracked in local storage, reset to default\n// noinspection SuspiciousTypeOfGuard\nif(typeof state.userSlippageTolerance!=='number'){state.userSlippageTolerance=INITIAL_ALLOWED_SLIPPAGE;}// deadline isnt being tracked in local storage, reset to default\n// noinspection SuspiciousTypeOfGuard\nif(typeof state.userDeadline!=='number'){state.userDeadline=DEFAULT_DEADLINE_FROM_NOW;}state.lastUpdateVersionTimestamp=currentTimestamp();}).addCase(updateUserDarkMode,function(state,action){state.userDarkMode=action.payload.userDarkMode;state.timestamp=currentTimestamp();}).addCase(updateMatchesDarkMode,function(state,action){state.matchesDarkMode=action.payload.matchesDarkMode;state.timestamp=currentTimestamp();}).addCase(updateUserExpertMode,function(state,action){state.userExpertMode=action.payload.userExpertMode;state.timestamp=currentTimestamp();}).addCase(updateUserSlippageTolerance,function(state,action){state.userSlippageTolerance=action.payload.userSlippageTolerance;state.timestamp=currentTimestamp();}).addCase(updateUserDeadline,function(state,action){state.userDeadline=action.payload.userDeadline;state.timestamp=currentTimestamp();}).addCase(addSerializedToken,function(state,_ref){var serializedToken=_ref.payload.serializedToken;state.tokens[serializedToken.chainId]=state.tokens[serializedToken.chainId]||{};state.tokens[serializedToken.chainId][serializedToken.address]=serializedToken;state.timestamp=currentTimestamp();}).addCase(removeSerializedToken,function(state,_ref2){var _ref2$payload=_ref2.payload,address=_ref2$payload.address,chainId=_ref2$payload.chainId;state.tokens[chainId]=state.tokens[chainId]||{};delete state.tokens[chainId][address];state.timestamp=currentTimestamp();}).addCase(addSerializedPair,function(state,_ref3){var serializedPair=_ref3.payload.serializedPair;if(serializedPair.token0.chainId===serializedPair.token1.chainId&&serializedPair.token0.address!==serializedPair.token1.address){var _chainId=serializedPair.token0.chainId;state.pairs[_chainId]=state.pairs[_chainId]||{};state.pairs[_chainId][pairKey(serializedPair.token0.address,serializedPair.token1.address)]=serializedPair;}state.timestamp=currentTimestamp();}).addCase(removeSerializedPair,function(state,_ref4){var _ref4$payload=_ref4.payload,chainId=_ref4$payload.chainId,tokenAAddress=_ref4$payload.tokenAAddress,tokenBAddress=_ref4$payload.tokenBAddress;if(state.pairs[chainId]){// just delete both keys if either exists\ndelete state.pairs[chainId][pairKey(tokenAAddress,tokenBAddress)];delete state.pairs[chainId][pairKey(tokenBAddress,tokenAAddress)];}state.timestamp=currentTimestamp();}).addCase(muteAudio,function(state){state.audioPlay=false;}).addCase(unmuteAudio,function(state){state.audioPlay=true;});});","map":{"version":3,"sources":["C:/Users/Prodip/Desktop/New folder/Newfolder1/XinoSwapTestnet/src/state/user/reducer.ts"],"names":["createReducer","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","muteAudio","unmuteAudio","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","audioPlay","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","serializedToken","chainId","address","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"mappings":"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","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  muteAudio,\r\n  unmuteAudio\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n\r\n  audioPlay: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: null,\r\n  matchesDarkMode: false,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateVersion, state => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const {chainId} = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, state => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, state => {\r\n      state.audioPlay = true\r\n    })\r\n)\r\n"]},"metadata":{},"sourceType":"module"}